 Desplegar un microservicio en azure. Libreria.
 
 1 - Crear repositorio git del microservicio.
	Almacena código fuente del microservicio.
	La idea es sincronizar el código que vamos desarrollando con el código
	que queremos enviar a los servidores de Azure.
	A futuro si deseamos utilizar otro servicio cloud AWS, google...
	Solo deberiamos dar a este nuevo servicio el acceso a nuestro repositorio del microservicio
 2 - Crear imagen docker del microservicio
	Docker Container necesita una base que defina sus caracteristicas. Se denomina IMAGEN del microservicio.
 3 - Cluster Kubernetes
	Luego de disponer de la imagen del microservicio libreria. Se puede incluir dentro de kubernetes.
	Se debe crear un cluster kubernetes que administre docker container microservicio.
 4 - Despliegue - Deploy en Azure
	Luego de configurar el cluster kubernetes, incluyendo container de microservicio, damos de alta en azure.
	Y crear un ambiente server donde se alojara el cluster
	
2 - Se debe instalar docker	
kubernetes es K8s. Contruido por google, ejecuta container en prd. administra container.
a - Container
	Sincroniza amb desarrollo local con servidor prd.
	Sobre docker se crean container con sus propias librerias.
	container a:	database mongodb + dependendencias + librerias + framework
	container b:	node.js + dependendencias + librerias
	
	sin docker:
	microservicio
	librerias + dependendencias
	OS
	Hardware.
	
	con docker:	
	1 o mas container(microservicio + librerias + dependendencias + DB...)
	docker
	OS
	Hardware.
	
	Se instala docker en el sistema operativo.
	Docker sirve para microservicio o app monoliticas. Ver virtuales vs container.jpg
	
	Container ventajas
	* Todo está incluido en el container. Librerias, etc.
	* Puedes escalar rapidamente. Puedes crear todos los container que desees, por ejemplo 3 container para
		un microservicio
	* Herramientas para administracion. y comunicacion entre container.
		Kubernetes y/o microsoft azure service fabrique?
	
	¿Cómo se instala docker localmente?
	Se debe crear la definicion de capas del container. Contiene el microservicio. (imagen).
	Con la imagen creada se puede crear la cantidad de instancias que se requieran.
	A cada instancia de la imagen se denomina container.
	
	Como creo la imagen?
	https://hub.docker.com/
	descargar la imagen que mas se adecue a tu proyecto
	
	Validar requerimientos
	hyperv
		sino powershell en admin enable-windowsoptionalfeature -online...
	
	
	https://docs.docker.com/
	descargar instalador para windows. Docker Desktop Installer.setup
	downloads and install
	Docker Desktop Installer. E Instalar.
	
	Alta en dockerHub
	https://hub.docker.com/
	https://hub.docker.com/signup?redirectTo=/subscription?plan=free
	dockerId	==> hernanjhc
	email		==> hernan_jhc@hotmail.com
	Key10_

En caso que docker no funcione, se hizo lo siguiente.	
	Excepción no controlada en la aplicación. Si hace clic en Continuar, la aplicación omitirá este error e intentará continuar. Si hace clic en Salir, la aplicación se cerrará inmediatamente.

Se produjo una excepción de tipo 'Docker.ApiServices.WSL2.WslKernelUpdateNotInstalledException'.
Enable-WindowsOptionalFeature -Online -FeatureName $("VirtualMachinePlatform", "Microsoft-Windows-Subsystem-Linux")

https://docs.microsoft.com/en-us/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package
instalar	wsl_update_x64
restart PC

	Comandos docker, 
	abrir powershell administrador.
	docker -v
	docker version 20...
	
	docker image list
	por ahora no hay nada...
	
	iniciar sesion en hubdocker (se inicia con windows)
	ahora estan enlazados hubdocker con powershell de la pc.
	
	Prueba.
	descargar una imagen de prueba https://hub.docker.com/_/nginx
	verificar imagen descargada. docker image list
	si quisiera revertir o eliminar imagen. docker rmi nginx:1.18.0
	Para crear la instancia del container. docker run -it nginx:1.18.0 /bin/bash
	
	Ahí ya estoy en linux. Se escribe un comando linux. ls -al
	Para detener el container. exit.
	
	Desde otro powershell. docker container list. describe los container que se estan ejecutando.
	
	Ver historico de container. docker container list -a
	limpiar container de memoria. docker rm (3 primeros digitos del container id). docker rm ba6
	
	Mas informacion de comandos. HubDocker.com/documentacion/gethelp
	
	Como creamos container que almanecenen microservicios con net core
	o deployment de un microservicio en un container
	paso 1 - crear instancia de una imagen (docker container)
	con ello se crea docker file: codigo compilado + imagen base con las librerias de net core.
	docker file tiene los comandos que generaran la imagen de la app microservicio.
	posterior la app image. Se puede crear el container del microservicio.
	ver codigo compilado hasta container.jpg
	
	vs2019. click boton derecho sobre aspi.libreria. agregar. soporte docker. linux.
	se creó un archivo docker file en el proyecto.
	==>webapp 
	==> docker file (sdk net core, path files en proyecto y dónde irán a futuro, publish app in container)
		se comenta archivo docker file en servicios.api.libreria.
	
	Se publicara el microservicio en hub.docker.com
	Libreria. Publicar. Docker container register. Docker Hub.
	Ingresar credenciales docker.hub
	Corroborar repositorio en docker.hub.
	
b - Orquestacion


Microservicio. Una sola funcionalidad.